# 1.6 Вывод результатов работы программы Функсия [print]
"""# -*- coding: utf-8 -*-
import encodings.aliases
arr = encodings.aliases.aliases
keys = list ( arr.keys() )
keys.sort()
for key in keys:
    print("%s => %s" % (key, arr[key]))
x = 5; y = 10; z = x + y
print(z)
i = 1
while i < 11:
    print(i)
    i += 1
print("Конец программа")
for i in range(1, 11): print(i)
print("Конец программа")
x = 15 + 20 \
    + 30
print(x)

print("Строка 1", "Строка 2", end='')
print("Сторока 3")

for n in range(1, 5):
    print(n, end=" ")
print()
print("Это текст на новой строке")

print("строка 1строка 2 строка 3")

import sys
sys.stdout.write("Строка 1 \n")
sys.stdout.write("Строка 2")"""

# Ввод данных
"""Для ввода данных в Python 3 предназначена функция input (),
которая получает данные со стандартного ввода stdin.
Функция имеет следующий формат:

[<Значение> =] inрut([<Сообщение>]) 

name = input("Введите ваше имя: ")
print("Привет,", name)
input("нажмите <Enter> для закрытия окна")

result = eval(input("Bвeдитe инструкцию: "))
print("Резултать:", result)
input()

ВНИМАНИЕ! Функция eval () выполнит любую
введенную инструкцию. Никогда не используйте
этот код, если не доверяете пользователю. 

import sys
arr = byteorder[:]
for n in arr:
    print(n)

# 1.8. Доступ к документации"""

# ГЛАВА 2
# Переменные

# Все данные в языке Python представлены объектшwи.
# Каждый объект имеет тип данных и значение.
# Для доступа к объекту предназначены переменные.
# При инициализации в переменной сохраняется ссылка
# на объект (адрес объекта в памяти компьютера).
# Благодаря этой ссылке мож1:10 в дальнейшем изменять
# объект из программы.

"""import keyword # Список всех ключевых!.слов
keyword.kwlist

import builtins # Получения списка выстроеннных идентфикаторов
dir(builtins)

x = [1, 2]
y = [1, 2]
print(x, y)
y[1] = 100
print(x, y)

x = [1, 2]
y = [1, 2]
print(x is y)

x, y = 1, 2; x, y
x, y = y, x; x, y
print(x, y)

x, y, z = "123" # строка
print(x, y, z)

x, y, z = [1, 2, 3] # список
print(x, y, z)

x, y, z =  (1, 2, 3) # кортеж
print(x, y, z)

[x, y, z] = (1, 2, 3) # Список слева, кортеж справа
print(x, y, z)

x, y, *z = (1, 2, 3, 4)
print(x, y, z)

x, *y, z = (1, 2, 3, 4)
print(x, y, z)

*x, y, z = (1, 2, 3, 4)
print(x, y, z)

x, y, *z = (1, 2, 3)
print(x, y, z)

x, y, *z = (1, 2)
print(x, y, z)

*x, y, *z = (1, 2, 3, 4) # syntaxerror: to starred expression in assignment
print(x, y, z)"""

# 2.4. Проверка типа данных

"""# Проверить тип данных, хранящихся в переменной,
# можно следующими способами: t сравнить значение,
# возвращаемое функцией t уре ( ) , с названием типа данных:

x = 10
if type(x) == int:
    print("Это тип int")

# проверить тип с помощью функции isinstance () :

s = "Строка"
if isinstance(s, str):
    print("Это тип str")"""

# 2.5. Преобразование типов данных

"""int(7.5), int("71")

int(7.5), int("71")

 (7, 71)

int("71", 10), int("71", 8), int("0o71", 8), int("A", 16)

>>> (71, 57, 57, 10)

str(bytearray("строка", "utf-8"))

>>>"bytearray(b'\\xd1\\x81\\xd1\\x82\\xd1\\x80\\xd0\\xbe\\xd0\\xba\\xd0\\xb0')"""

"""# str ( [ <Объект> J) -преобразует объект в строку. Примеры:

str(125), str([1, 2, 3]) #('125', '[1, 2, 3]')

list("12345") # Преобразование строки
['1', '2', '3', '4', '5']

list((l, 2, 3, 4, 5)) # Преобразование кортежа 
[1, 2, з, 4, 5)

tuple([l, 2, З, 4, 5)) # Преобразование списка
(1, 2, 3, 4, 5)"""

"""x = input("x = ") # Результатом выполнения этого скрипта будет не число, а строка 512. Таким образом,
# следует запомнить, что функция input () возвращает результат в виде строки. Чтобы просуммировать два числа,
# необходимо преобразовать строку в число
y = input("y = ")
print(x + y)
input()"""

"""x = int(input("x = "))
y = int(input("у = ")) # Преобразование строки в число
print(x + y)
input()"""

"""# 2.6. Удаление переменной
# Удалить переменную можно с помощью инструкции del:

x = 10; y = 15 # Пример удаления одной переменной:
print(x, y)
del(y)
# Пример удаления нескольких переменных:
# >>> х, у= 10, 20 
# >>> del х, у """

# ГЛАВА 3
# Операторы

# 3.2. Двоичнье операторы

"""x = 100
print(~x)"""

"""x = 100
y = 75
z = x | y
e = "{0:b} & {1:b} = {2:b}".format(x, y, z)
print(z)
print(e)"""

# ГЛАВА 4  | Условные операторы и циклы
# 4.1. Операторы сравнения

"""m = True + 2
print(m)
l = False + 2
print(l)"""

# 4.2. Оператор ветвления if ... else

"""if "Ту ба кучо мерави" == 17:
    print("Ураа ту мерави ба Америка")
elif "Барои ба Америка рафтан бояд гринкарта буред" != 50:
    print("Ураа шумо гринкарта буридед")
else:
    print("Бояд шумо Ангилисиро омӯзед")"""

"""x = int(input("Ввидети число: "))
if x % 2 == 0:
    print(x, end=" ")
    print(x, "- Четное число")
else:
    print(x, end=" ")
    print(x, "- Нечетное число")
input()"""

# print(""" Какое операсионной вы пользуетесь?
# 1 - Windows 8
# 2 - Windows 7
# 3 - Windows Vista
# 4 - Windows XP
# 5 - другая""")
"""os = input("Ввидети число, соответствуюшие ответу: ")
if os == "1":
    print("Вы выбрали: Windows 8")
elif os == "2":
    print("Вы выбрали: Windows 7")
elif os == "3":
    print("Вы выбрали: Windows Vista")
elif os == "4":
    print("Вы выбрали: Windows XP")
elif os == "5":
    print("Вы выбрали: другая")
elif not os:
    print("Вы не ввели число")
else:
    print("Мы не смогли определить вашу операционную систему")"""

"""print("Yes" if 10 % 2 == 0 else "No")
s = "Yes" if 10 % 2 == 0 else "No"
print(s)
s = "yes" if 11 % 2 == 0 else "No"
print(s)"""

# 4.3. Цикл for

"""arr = {"x": 1, "y": 2, "z": 3}
for key in sorted(arr):
    print(key, arr[key])

arr = [1, 2, 3]
for i in range(len(arr)):
    arr[i] *= 2
print(arr)

obj = [0], [1], [2]
r = obj[0:2]
print(r)"""

"""for i in range(1, 101):
    if 4 < i < 11:
        continue
    print(i)"""

# 4.7. Оператор break. Прерывание цикла

"""i = 1
while True:
    if i > 100:
        break
    print(i)
    i += 1"""

"""print("Введите слово 'stop' для получения результата")
summa = 0
while True:
    x = input("Введите число: ")
    if x == "stop":
        break
    x = int(x)
    summa += x
print("Сумма чисел равна:", summa)"""

# ГЛАВА 5 | Числа

# 5.2. Модуль math. Математические функции
# import math

# radians () -преобразует градусы в радианы:
# degrees () -преобразует радианы в градусы:

# Двоичные числа начинаются с комбинации
# символов оь (или ов) и содержат цифры от о или 1:

"""s = 0b11111111, 0b101001, 0b101101010
print(s) # (255, 41, 362)

# Восьмеричные числа начинаются с нуля и
# следующей за ним латинской буквы о
# (регистр не имеет значения) и содержат цифры от о до 7

d = 0o7, 0o12, 0o777, 0O7, 0o12, 0o777
print(d) # 7, 10, 511, 7, 10, 511

# Шестнадцатеричные числа начинаются
# с комбинации символов Ох (или ох) и могут
# содержать цифры от о до 9 и буквы от А до F
# (регистр букв не имеет значения):

f = 0x9, 0xA, 0x10, 0xFFF, 0xfff
print(f) # (9, 10, 16, 4095, 4095)"""

"""f = 0.3 - 0.1 - 0.1 - 0.1
print(f)

from decimal import Decimal

x = Decimal("0.3") - Decimal("0.1") - Decimal("0.1") - Decimal("0.1")
print(x)"""
